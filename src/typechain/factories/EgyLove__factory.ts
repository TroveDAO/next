/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EgyLove, EgyLoveInterface } from "../EgyLove";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ammount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ammount",
        type: "uint256",
      },
    ],
    name: "exchangeBurn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_energyExchanger",
        type: "address",
      },
    ],
    name: "setEnergyExchanger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newuri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060600160405280603f815260200162002549603f9139620000378162000056565b5062000043336200006f565b6003805460ff60a01b19169055620001ae565b80516200006b906002906020840190620000c1565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000cf9062000167565b90600052602060002090601f016020900481019282620000f357600085556200013e565b82601f106200010e57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013e57825182559160200191906001019062000121565b506200014c92915062000150565b5090565b5b808211156200014c576000815560010162000151565b6002810460018216806200017c57607f821691505b6020821081141562000192576200019262000198565b50919050565b634e487b7160e01b600052602260045260246000fd5b61238b80620001be6000396000f3fe608060405234801561001057600080fd5b50600436106101355760003560e01c806374c6f88f116100b2578063be180f1211610081578063f242432a11610066578063f242432a146102a3578063f2fde38b146102b6578063fd702698146102c957600080fd5b8063be180f1214610254578063e985e9c51461026757600080fd5b806374c6f88f1461020d5780638456cb59146102205780638da5cb5b14610228578063a22cb4651461024157600080fd5b80632eb2c2d6116101095780634e1273f4116100ee5780634e1273f4146101d35780635c975abb146101f3578063715018a61461020557600080fd5b80632eb2c2d6146101b85780633f4ba83a146101cb57600080fd5b8062fdd58e1461013a57806301ffc9a71461016357806302fe5305146101835780630e89341c14610198575b600080fd5b61014d610148366004611642565b6102dc565b60405161015a9190612083565b60405180910390f35b6101766101713660046116dd565b610336565b60405161015a9190611f44565b61019661019136600461171f565b610419565b005b6101ab6101a636600461175a565b61044f565b60405161015a9190611f52565b6101966101c63660046114ec565b6104e3565b61019661052f565b6101e66101e1366004611675565b610563565b60405161015a9190611f07565b600354600160a01b900460ff16610176565b61019661064b565b61019661021b36600461177b565b61067f565b6101966106ba565b6003546001600160a01b031660405161015a9190611e52565b61019661024f36600461160f565b6106ec565b610176610262366004611642565b6106fb565b6101766102753660046114af565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101966102b13660046115b5565b610753565b6101966102c436600461148e565b610798565b6101966102d736600461148e565b6107f1565b60006001600160a01b03831661030d5760405162461bcd60e51b815260040161030490611f93565b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a260000000000000000000000000000000000000000000000000000000014806103c957507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061033057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610330565b6003546001600160a01b031633146104435760405162461bcd60e51b815260040161030490612023565b61044c81610855565b50565b60606002805461045e9061219b565b80601f016020809104026020016040519081016040528092919081815260200182805461048a9061219b565b80156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806104ff57506104ff8533610275565b61051b5760405162461bcd60e51b815260040161030490611ff3565b6105288585858585610868565b5050505050565b6003546001600160a01b031633146105595760405162461bcd60e51b815260040161030490612023565b610561610a12565b565b606081518351146105865760405162461bcd60e51b815260040161030490612043565b6000835167ffffffffffffffff8111156105a2576105a2612252565b6040519080825280602002602001820160405280156105cb578160200160208202803683370190505b50905060005b8451811015610643576106168582815181106105ef576105ef61223c565b60200260200101518583815181106106095761060961223c565b60200260200101516102dc565b8282815181106106285761062861223c565b602090810291909101015261063c816121f5565b90506105d1565b509392505050565b6003546001600160a01b031633146106755760405162461bcd60e51b815260040161030490612023565b6105616000610a9d565b6003546001600160a01b031633146106a95760405162461bcd60e51b815260040161030490612023565b6106b533848484610b07565b505050565b6003546001600160a01b031633146106e45760405162461bcd60e51b815260040161030490612023565b610561610beb565b6106f7338383610c6b565b5050565b6004546000906001600160a01b031633146107285760405162461bcd60e51b815260040161030490612073565b61073e83600061073985600261212f565b610d2c565b61074a83600184610d2c565b50600192915050565b6001600160a01b03851633148061076f575061076f8533610275565b61078b5760405162461bcd60e51b815260040161030490611fc3565b6105288585858585610e30565b6003546001600160a01b031633146107c25760405162461bcd60e51b815260040161030490612023565b6001600160a01b0381166107e85760405162461bcd60e51b815260040161030490611fa3565b61044c81610a9d565b6003546001600160a01b0316331461081b5760405162461bcd60e51b815260040161030490612023565b600480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b80516106f790600290602084019061124f565b81518351146108895760405162461bcd60e51b815260040161030490612053565b6001600160a01b0384166108af5760405162461bcd60e51b815260040161030490611fe3565b336108be818787878787610f59565b60005b84518110156109a45760008582815181106108de576108de61223c565b6020026020010151905060008583815181106108fc576108fc61223c565b602090810291909101810151600084815280835260408082206001600160a01b038e16835290935291909120549091508181101561094c5760405162461bcd60e51b815260040161030490612013565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610989908490612117565b925050819055505050508061099d906121f5565b90506108c1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109f4929190611f1f565b60405180910390a4610a0a818787878787610f88565b505050505050565b600354600160a01b900460ff16610a3b5760405162461bcd60e51b815260040161030490611f83565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610a939190611e52565b60405180910390a1565b600380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610b2d5760405162461bcd60e51b815260040161030490612063565b33610b4d81600087610b3e886110f0565b610b47886110f0565b87610f59565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610b7d908490612117565b92505081905550846001600160a01b031660006001600160a01b0316826001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628787604051610bd4929190612091565b60405180910390a46105288160008787878761113b565b600354600160a01b900460ff1615610c155760405162461bcd60e51b815260040161030490611fd3565b600380547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a863390565b816001600160a01b0316836001600160a01b03161415610c9d5760405162461bcd60e51b815260040161030490612033565b6001600160a01b038381166000818152600160209081526040808320948716808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610d1f908590611f44565b60405180910390a3505050565b6001600160a01b038316610d525760405162461bcd60e51b815260040161030490612003565b33610d8181856000610d63876110f0565b610d6c876110f0565b60405180602001604052806000815250610f59565b6000838152602081815260408083206001600160a01b038816845290915290205482811015610dc25760405162461bcd60e51b815260040161030490611fb3565b6000848152602081815260408083206001600160a01b03808a16808652919093528184208786039055905190918516907fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6290610e219089908990612091565b60405180910390a45050505050565b6001600160a01b038416610e565760405162461bcd60e51b815260040161030490611fe3565b33610e66818787610b3e886110f0565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015610ea75760405162461bcd60e51b815260040161030490612013565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290610ee4908490612117565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610f3a929190612091565b60405180910390a4610f5082888888888861113b565b50505050505050565b600354600160a01b900460ff1615610f835760405162461bcd60e51b815260040161030490611fd3565b610a0a565b6001600160a01b0384163b15610a0a576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190610fe59089908990889088908890600401611e60565b602060405180830381600087803b158015610fff57600080fd5b505af192505050801561102f575060408051601f3d908101601f1916820190925261102c918101906116fe565b60015b61108f5761103b612268565b806308c379a014156110755750611050612284565b8061105b5750611077565b8060405162461bcd60e51b81526004016103049190611f52565b505b60405162461bcd60e51b815260040161030490611f63565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610f505760405162461bcd60e51b815260040161030490611f73565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061112a5761112a61223c565b602090810291909101015292915050565b6001600160a01b0384163b15610a0a576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906111989089908990889088908890600401611ec0565b602060405180830381600087803b1580156111b257600080fd5b505af19250505080156111e2575060408051601f3d908101601f191682019092526111df918101906116fe565b60015b6111ee5761103b612268565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610f505760405162461bcd60e51b815260040161030490611f73565b82805461125b9061219b565b90600052602060002090601f01602090048101928261127d57600085556112c3565b82601f1061129657805160ff19168380011785556112c3565b828001600101855582156112c3579182015b828111156112c35782518255916020019190600101906112a8565b506112cf9291506112d3565b5090565b5b808211156112cf57600081556001016112d4565b60006112fb6112f6846120c8565b6120ac565b9050808382526020820190508285602086028201111561131d5761131d600080fd5b60005b85811015611349578161133388826113e3565b8452506020928301929190910190600101611320565b5050509392505050565b60006113616112f6846120c8565b9050808382526020820190508285602086028201111561138357611383600080fd5b60005b8581101561134957816113998882611483565b8452506020928301929190910190600101611386565b60006113bd6112f6846120ec565b9050828152602081018484840111156113d8576113d8600080fd5b61064384828561215f565b80356103308161230b565b600082601f83011261140257611402600080fd5b81356114128482602086016112e8565b949350505050565b600082601f83011261142e5761142e600080fd5b8135611412848260208601611353565b80356103308161231f565b803561033081612327565b805161033081612327565b600082601f83011261147357611473600080fd5b81356114128482602086016113af565b80356103308161234f565b6000602082840312156114a3576114a3600080fd5b600061141284846113e3565b600080604083850312156114c5576114c5600080fd5b60006114d185856113e3565b92505060206114e2858286016113e3565b9150509250929050565b600080600080600060a0868803121561150757611507600080fd5b600061151388886113e3565b9550506020611524888289016113e3565b945050604086013567ffffffffffffffff81111561154457611544600080fd5b6115508882890161141a565b935050606086013567ffffffffffffffff81111561157057611570600080fd5b61157c8882890161141a565b925050608086013567ffffffffffffffff81111561159c5761159c600080fd5b6115a88882890161145f565b9150509295509295909350565b600080600080600060a086880312156115d0576115d0600080fd5b60006115dc88886113e3565b95505060206115ed888289016113e3565b94505060406115fe88828901611483565b935050606061157c88828901611483565b6000806040838503121561162557611625600080fd5b600061163185856113e3565b92505060206114e28582860161143e565b6000806040838503121561165857611658600080fd5b600061166485856113e3565b92505060206114e285828601611483565b6000806040838503121561168b5761168b600080fd5b823567ffffffffffffffff8111156116a5576116a5600080fd5b6116b1858286016113ee565b925050602083013567ffffffffffffffff8111156116d1576116d1600080fd5b6114e28582860161141a565b6000602082840312156116f2576116f2600080fd5b60006114128484611449565b60006020828403121561171357611713600080fd5b60006114128484611454565b60006020828403121561173457611734600080fd5b813567ffffffffffffffff81111561174e5761174e600080fd5b6114128482850161145f565b60006020828403121561176f5761176f600080fd5b60006114128484611483565b60008060006060848603121561179357611793600080fd5b600061179f8686611483565b93505060206117b086828701611483565b925050604084013567ffffffffffffffff8111156117d0576117d0600080fd5b6117dc8682870161145f565b9150509250925092565b60006117f28383611e4c565b505060200190565b6118038161214e565b82525050565b6000611813825190565b80845260209384019383018060005b8381101561184757815161183688826117e6565b975060208301925050600101611822565b509495945050505050565b801515611803565b6000611864825190565b80845260208401935061187b81856020860161216b565b601f01601f19169290920192915050565b603481526000602082017f455243313135353a207472616e7366657220746f206e6f6e204552433131353581527f526563656976657220696d706c656d656e746572000000000000000000000000602082015291505b5060400190565b602881526000602082017f455243313135353a204552433131353552656365697665722072656a6563746581527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015291506118e2565b601481526000602082017f5061757361626c653a206e6f7420706175736564000000000000000000000000815291505b5060200190565b602b81526000602082017f455243313135353a2062616c616e636520717565727920666f7220746865207a81527f65726f2061646472657373000000000000000000000000000000000000000000602082015291506118e2565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f6464726573730000000000000000000000000000000000000000000000000000602082015291506118e2565b602481526000602082017f455243313135353a206275726e20616d6f756e7420657863656564732062616c81527f616e636500000000000000000000000000000000000000000000000000000000602082015291506118e2565b602981526000602082017f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7281527f20617070726f7665640000000000000000000000000000000000000000000000602082015291506118e2565b601081526000602082017f5061757361626c653a207061757365640000000000000000000000000000000081529150611973565b602581526000602082017f455243313135353a207472616e7366657220746f20746865207a65726f20616481527f6472657373000000000000000000000000000000000000000000000000000000602082015291506118e2565b603281526000602082017f455243313135353a207472616e736665722063616c6c6572206973206e6f742081527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000602082015291506118e2565b602381526000602082017f455243313135353a206275726e2066726f6d20746865207a65726f206164647281527f6573730000000000000000000000000000000000000000000000000000000000602082015291506118e2565b602a81526000602082017f455243313135353a20696e73756666696369656e742062616c616e636520666f81527f72207472616e7366657200000000000000000000000000000000000000000000602082015291506118e2565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611973565b602981526000602082017f455243313135353a2073657474696e6720617070726f76616c2073746174757381527f20666f722073656c660000000000000000000000000000000000000000000000602082015291506118e2565b602981526000602082017f455243313135353a206163636f756e747320616e6420696473206c656e67746881527f206d69736d617463680000000000000000000000000000000000000000000000602082015291506118e2565b602881526000602082017f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682081527f6d69736d61746368000000000000000000000000000000000000000000000000602082015291506118e2565b602181526000602082017f455243313135353a206d696e7420746f20746865207a65726f2061646472657381527f7300000000000000000000000000000000000000000000000000000000000000602082015291506118e2565b601181526000602082017f4e6f74207468652065786368616e67657200000000000000000000000000000081529150611973565b80611803565b6020810161033082846117fa565b60a08101611e6e82886117fa565b611e7b60208301876117fa565b8181036040830152611e8d8186611809565b90508181036060830152611ea18185611809565b90508181036080830152611eb5818461185a565b979650505050505050565b60a08101611ece82886117fa565b611edb60208301876117fa565b611ee86040830186611e4c565b611ef56060830185611e4c565b8181036080830152611eb5818461185a565b60208082528101611f188184611809565b9392505050565b60408082528101611f308185611809565b905081810360208301526114128184611809565b602081016103308284611852565b60208082528101611f18818461185a565b602080825281016103308161188c565b60208082528101610330816118e9565b6020808252810161033081611943565b602080825281016103308161197a565b60208082528101610330816119d4565b6020808252810161033081611a2e565b6020808252810161033081611a88565b6020808252810161033081611ae2565b6020808252810161033081611b16565b6020808252810161033081611b70565b6020808252810161033081611bca565b6020808252810161033081611c24565b6020808252810161033081611c7e565b6020808252810161033081611cb0565b6020808252810161033081611d0a565b6020808252810161033081611d64565b6020808252810161033081611dbe565b6020808252810161033081611e18565b602081016103308284611e4c565b6040810161209f8285611e4c565b611f186020830184611e4c565b60006120b760405190565b90506120c382826121c8565b919050565b600067ffffffffffffffff8211156120e2576120e2612252565b5060209081020190565b600067ffffffffffffffff82111561210657612106612252565b601f19601f83011660200192915050565b6000821982111561212a5761212a612210565b500190565b600081600019048311821515161561214957612149612210565b500290565b60006001600160a01b038216610330565b82818337506000910152565b60005b8381101561218657818101518382015260200161216e565b83811115612195576000848401525b50505050565b6002810460018216806121af57607f821691505b602082108114156121c2576121c2612226565b50919050565b601f19601f830116810181811067ffffffffffffffff821117156121ee576121ee612252565b6040525050565b600060001982141561220957612209612210565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156122815760046000803e5060005160e01c5b90565b600060443d10156122925790565b60405160043d036004823e80513d602482011167ffffffffffffffff821117156122bb57505090565b808201805167ffffffffffffffff8111156122d7575050505090565b80602083010160043d0385018111156122f257505050505090565b612301826020018501866121c8565b5090949350505050565b6123148161214e565b811461044c57600080fd5b801515612314565b7fffffffff000000000000000000000000000000000000000000000000000000008116612314565b8061231456fea264697066735822122058e8dd4966e33ad01a4484fb46100d753f01b09627a480727ee2b04994d0057464736f6c63430008070033697066733a2f2f516d62593339523166517366476363337672706e5068577653636b6e6e367a75576f3759704b357778696b6d59432f7b69647d2e6a736f6e";

type EgyLoveConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EgyLoveConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EgyLove__factory extends ContractFactory {
  constructor(...args: EgyLoveConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EgyLove> {
    return super.deploy(overrides || {}) as Promise<EgyLove>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EgyLove {
    return super.attach(address) as EgyLove;
  }
  connect(signer: Signer): EgyLove__factory {
    return super.connect(signer) as EgyLove__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EgyLoveInterface {
    return new utils.Interface(_abi) as EgyLoveInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EgyLove {
    return new Contract(address, _abi, signerOrProvider) as EgyLove;
  }
}

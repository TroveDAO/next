/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Holder, ERC1155HolderInterface } from "../ERC1155Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061059b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006f578063f23a6e61146100b4575b600080fd5b6100596100543660046103c0565b6100ec565b6040516100669190610413565b60405180910390f35b6100a761007d36600461029d565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6040516100669190610421565b6100a76100c2366004610366565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061017f57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60006101986101938461044b565b61042f565b905080838252602082019050828560208602820111156101ba576101ba600080fd5b60005b858110156101e657816101d08882610292565b84525060209283019291909101906001016101bd565b5050509392505050565b60006101fe6101938461046f565b90508281526020810184848401111561021957610219600080fd5b6102248482856104b8565b509392505050565b803561017f81610520565b600082601f83011261024b5761024b600080fd5b813561025b848260208601610185565b949350505050565b803561017f81610537565b600082601f83011261028257610282600080fd5b813561025b8482602086016101f0565b803561017f8161055f565b600080600080600060a086880312156102b8576102b8600080fd5b60006102c4888861022c565b95505060206102d58882890161022c565b945050604086013567ffffffffffffffff8111156102f5576102f5600080fd5b61030188828901610237565b935050606086013567ffffffffffffffff81111561032157610321600080fd5b61032d88828901610237565b925050608086013567ffffffffffffffff81111561034d5761034d600080fd5b6103598882890161026e565b9150509295509295909350565b600080600080600060a0868803121561038157610381600080fd5b600061038d888861022c565b955050602061039e8882890161022c565b94505060406103af88828901610292565b935050606061032d88828901610292565b6000602082840312156103d5576103d5600080fd5b600061025b8484610263565b8015155b82525050565b7fffffffff0000000000000000000000000000000000000000000000000000000081166103e5565b6020810161017f82846103e1565b6020810161017f82846103eb565b600061043a60405190565b905061044682826104c4565b919050565b600067ffffffffffffffff821115610465576104656104f1565b5060209081020190565b600067ffffffffffffffff821115610489576104896104f1565b601f19601f83011660200192915050565b600073ffffffffffffffffffffffffffffffffffffffff821661017f565b82818337506000910152565b601f19601f830116810181811067ffffffffffffffff821117156104ea576104ea6104f1565b6040525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105298161049a565b811461053457600080fd5b50565b7fffffffff000000000000000000000000000000000000000000000000000000008116610529565b8061052956fea2646970667358221220af2f7a13af4dc3e336464459e7b3a0dd6a93bbd88b82878fbe0e64e8481da96564736f6c63430008070033";

type ERC1155HolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155HolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Holder__factory extends ContractFactory {
  constructor(...args: ERC1155HolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Holder> {
    return super.deploy(overrides || {}) as Promise<ERC1155Holder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Holder {
    return super.attach(address) as ERC1155Holder;
  }
  connect(signer: Signer): ERC1155Holder__factory {
    return super.connect(signer) as ERC1155Holder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderInterface {
    return new utils.Interface(_abi) as ERC1155HolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Holder;
  }
}

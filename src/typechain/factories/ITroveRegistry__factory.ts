/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ITroveRegistry,
  ITroveRegistryInterface,
} from "../ITroveRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "layerId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum ITroveRegistry.EntityType",
        name: "entityType",
        type: "uint8",
      },
      {
        internalType: "enum ITroveRegistry.TreasureType",
        name: "treasureType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "entityContract",
        type: "address",
      },
    ],
    name: "addEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITroveRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ITroveRegistryInterface {
    return new utils.Interface(_abi) as ITroveRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITroveRegistry {
    return new Contract(address, _abi, signerOrProvider) as ITroveRegistry;
  }
}

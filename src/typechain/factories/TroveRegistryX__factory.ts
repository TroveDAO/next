/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TroveRegistryX,
  TroveRegistryXInterface,
} from "../TroveRegistryX";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "entities",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "entityContract",
        type: "address",
      },
      {
        internalType: "enum TroveRegistryX.EntityType",
        name: "entityType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "string",
        name: "geohash",
        type: "string",
      },
      {
        internalType: "enum TroveRegistryX.TreasureType",
        name: "treasureType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "vaultId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "layerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
    ],
    name: "getEntity",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "entityContract",
            type: "address",
          },
          {
            internalType: "enum TroveRegistryX.EntityType",
            name: "entityType",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
          {
            internalType: "string",
            name: "geohash",
            type: "string",
          },
          {
            internalType: "enum TroveRegistryX.TreasureType",
            name: "treasureType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "vaultId",
            type: "uint256",
          },
        ],
        internalType: "struct TroveRegistryX.Entity",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "layers",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "layerId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "prover",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "layerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
    ],
    name: "removeEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610950806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806312b1a17814610051578063366a7e091461007a5780639e9198c21461008e578063ab435727146100b1575b600080fd5b61006461005f3660046105c9565b6100d7565b60405161007191906107d7565b60405180910390f35b61008c6100883660046105c9565b5050565b005b6100a161009c3660046105a0565b61032e565b6040516100719493929190610794565b6100c46100bf3660046105c9565b6103f8565b6040516100719796959493929190610720565b6040805160e0810182526060808252600060208301819052928201839052808201839052608082015260a0810182905260c0810191909152600083815260016020908152604080832085845290915290819020815160e081019092528054829082906101429061086c565b80601f016020809104026020016040519081016040528092919081815260200182805461016e9061086c565b80156101bb5780601f10610190576101008083540402835291602001916101bb565b820191906000526020600020905b81548152906001019060200180831161019e57829003601f168201915b5050509183525050600182015473ffffffffffffffffffffffffffffffffffffffff8116602083015260409091019074010000000000000000000000000000000000000000900460ff16600281111561021657610216610899565b600281111561022757610227610899565b815260018201547501000000000000000000000000000000000000000000900460ff16151560208201526002820180546040909201916102669061086c565b80601f01602080910402602001604051908101604052809291908181526020018280546102929061086c565b80156102df5780601f106102b4576101008083540402835291602001916102df565b820191906000526020600020905b8154815290600101906020018083116102c257829003601f168201915b5050509183525050600382015460209091019060ff16600181111561030657610306610899565b600181111561031757610317610899565b815260200160048201548152505090505b92915050565b6000602081905290815260409020805481906103499061086c565b80601f01602080910402602001604051908101604052809291908181526020018280546103759061086c565b80156103c25780601f10610397576101008083540402835291602001916103c2565b820191906000526020600020905b8154815290600101906020018083116103a557829003601f168201915b50505050600183015460028401546003909401549293909273ffffffffffffffffffffffffffffffffffffffff91821692501684565b600160209081526000928352604080842090915290825290208054819061041e9061086c565b80601f016020809104026020016040519081016040528092919081815260200182805461044a9061086c565b80156104975780601f1061046c57610100808354040283529160200191610497565b820191906000526020600020905b81548152906001019060200180831161047a57829003601f168201915b5050506001840154600285018054949573ffffffffffffffffffffffffffffffffffffffff83169560ff7401000000000000000000000000000000000000000085048116965075010000000000000000000000000000000000000000009094049093169350916105069061086c565b80601f01602080910402602001604051908101604052809291908181526020018280546105329061086c565b801561057f5780601f106105545761010080835404028352916020019161057f565b820191906000526020600020905b81548152906001019060200180831161056257829003601f168201915b505050506003830154600490930154919260ff1691905087565b8035610328565b6000602082840312156105b5576105b5600080fd5b60006105c18484610599565b949350505050565b600080604083850312156105df576105df600080fd5b60006105eb8585610599565b92505060206105fc85828601610599565b9150509250929050565b61060f816107ef565b82525050565b80151561060f565b61060f81610826565b61060f81610831565b6000610639825190565b80845260208401935061065081856020860161083c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b805160e080845260009190840190610697828261062f565b91505060208301516106ac6020860182610606565b5060408301516106bf604086018261061d565b5060608301516106d26060860182610615565b50608083015184820360808601526106ea828261062f565b91505060a08301516106ff60a0860182610626565b5060c083015161071260c086018261071a565b509392505050565b8061060f565b60e08082528101610731818a61062f565b90506107406020830189610606565b61074d604083018861061d565b61075a6060830187610615565b818103608083015261076c818661062f565b905061077b60a0830185610626565b61078860c083018461071a565b98975050505050505050565b608080825281016107a5818761062f565b90506107b4602083018661071a565b6107c16040830185610606565b6107ce6060830184610606565b95945050505050565b602080825281016107e8818461067f565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610328565b80610817816108f7565b919050565b806108178161090a565b60006103288261080d565b60006103288261081c565b60005b8381101561085757818101518382015260200161083f565b83811115610866576000848401525b50505050565b60028104600182168061088057607f821691505b60208210811415610893576108936108c8565b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6003811061090757610907610899565b50565b600281106109075761090761089956fea2646970667358221220252f028e42f4710adf5cfc77f439f9f18637e152c4d584895851ecd94435c1d264736f6c63430008070033";

type TroveRegistryXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TroveRegistryXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TroveRegistryX__factory extends ContractFactory {
  constructor(...args: TroveRegistryXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TroveRegistryX> {
    return super.deploy(overrides || {}) as Promise<TroveRegistryX>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TroveRegistryX {
    return super.attach(address) as TroveRegistryX;
  }
  connect(signer: Signer): TroveRegistryX__factory {
    return super.connect(signer) as TroveRegistryX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TroveRegistryXInterface {
    return new utils.Interface(_abi) as TroveRegistryXInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TroveRegistryX {
    return new Contract(address, _abi, signerOrProvider) as TroveRegistryX;
  }
}

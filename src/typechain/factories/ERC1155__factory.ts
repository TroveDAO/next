/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155, ERC1155Interface } from "../ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b2b38038062001b2b83398101604081905262000034916200017e565b6200003f8162000046565b50620002c9565b80516200005b9060029060208401906200005f565b5050565b8280546200006d906200023d565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b60006200011c6200011684620001dd565b620001be565b905082815260208101848484011115620001395762000139600080fd5b620001468482856200020a565b509392505050565b600082601f830112620001645762000164600080fd5b81516200017684826020860162000105565b949350505050565b600060208284031215620001955762000195600080fd5b81516001600160401b03811115620001b057620001b0600080fd5b62000176848285016200014e565b6000620001ca60405190565b9050620001d882826200026e565b919050565b60006001600160401b03821115620001f957620001f9620002b3565b601f19601f83011660200192915050565b60005b83811015620002275781810151838201526020016200020d565b8381111562000237576000848401525b50505050565b6002810460018216806200025257607f821691505b602082108114156200026857620002686200029d565b50919050565b601f19601f83011681018181106001600160401b0382111715620002965762000296620002b3565b6040525050565b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61185280620002d96000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e74565b61018c565b6040516100ac9190611548565b60405180910390f35b6100c86100c3366004610f0f565b6101e6565b6040516100ac9190611489565b6100e86100e3366004610f51565b6102c9565b6040516100ac9190611497565b610108610103366004610d1e565b61035d565b005b61011d610118366004610ea7565b6103a9565b6040516100ac919061144c565b610108610138366004610e41565b610491565b6100c861014b366004610ce1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610de7565b6104a0565b60006001600160a01b0383166101bd5760405162461bcd60e51b81526004016101b4906114c8565b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fd9b67a2600000000000000000000000000000000000000000000000000000000148061027957507fffffffff0000000000000000000000000000000000000000000000000000000082167f0e89341c00000000000000000000000000000000000000000000000000000000145b806101e057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146101e0565b6060600280546102d890611641565b80601f016020809104026020016040519081016040528092919081815260200182805461030490611641565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103795750610379853361014b565b6103955760405162461bcd60e51b81526004016101b4906114f8565b6103a285858585856104e5565b5050505050565b606081518351146103cc5760405162461bcd60e51b81526004016101b490611528565b6000835167ffffffffffffffff8111156103e8576103e8611716565b604051908082528060200260200182016040528015610411578160200160208202803683370190505b50905060005b84518110156104895761045c85828151811061043557610435611700565b602002602001015185838151811061044f5761044f611700565b602002602001015161018c565b82828151811061046e5761046e611700565b60209081029190910101526104828161169b565b9050610417565b509392505050565b61049c338383610681565b5050565b6001600160a01b0385163314806104bc57506104bc853361014b565b6104d85760405162461bcd60e51b81526004016101b4906114d8565b6103a28585858585610742565b81518351146105065760405162461bcd60e51b81526004016101b490611538565b6001600160a01b03841661052c5760405162461bcd60e51b81526004016101b4906114e8565b3360005b845181101561061357600085828151811061054d5761054d611700565b60200260200101519050600085838151811061056b5761056b611700565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105bb5760405162461bcd60e51b81526004016101b490611508565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906105f89084906115dc565b925050819055505050508061060c9061169b565b9050610530565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610663929190611464565b60405180910390a4610679818787878787610874565b505050505050565b816001600160a01b0316836001600160a01b031614156106b35760405162461bcd60e51b81526004016101b490611518565b6001600160a01b038381166000818152600160209081526040808320948716808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610735908590611489565b60405180910390a3505050565b6001600160a01b0384166107685760405162461bcd60e51b81526004016101b4906114e8565b33610781818787610778886109dc565b6103a2886109dc565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156107c25760405162461bcd60e51b81526004016101b490611508565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906107ff9084906115dc565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610855929190611556565b60405180910390a461086b828888888888610a27565b50505050505050565b6001600160a01b0384163b15610679576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c81906108d190899089908890889088906004016113a5565b602060405180830381600087803b1580156108eb57600080fd5b505af192505050801561091b575060408051601f3d908101601f1916820190925261091891810190610f30565b60015b61097b5761092761172c565b806308c379a01415610961575061093c611748565b806109475750610963565b8060405162461bcd60e51b81526004016101b49190611497565b505b60405162461bcd60e51b81526004016101b4906114a8565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461086b5760405162461bcd60e51b81526004016101b4906114b8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a1657610a16611700565b602090810291909101015292915050565b6001600160a01b0384163b15610679576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e6190610a849089908990889088908890600401611405565b602060405180830381600087803b158015610a9e57600080fd5b505af1925050508015610ace575060408051601f3d908101601f19168201909252610acb91810190610f30565b60015b610ada5761092761172c565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461086b5760405162461bcd60e51b81526004016101b4906114b8565b6000610b4e610b498461158d565b611571565b90508083825260208201905082856020860282011115610b7057610b70600080fd5b60005b85811015610b9c5781610b868882610c36565b8452506020928301929190910190600101610b73565b5050509392505050565b6000610bb4610b498461158d565b90508083825260208201905082856020860282011115610bd657610bd6600080fd5b60005b85811015610b9c5781610bec8882610cd6565b8452506020928301929190910190600101610bd9565b6000610c10610b49846115b1565b905082815260208101848484011115610c2b57610c2b600080fd5b610489848285611605565b80356101e0816117cf565b600082601f830112610c5557610c55600080fd5b8135610c65848260208601610b3b565b949350505050565b600082601f830112610c8157610c81600080fd5b8135610c65848260208601610ba6565b80356101e0816117e6565b80356101e0816117ee565b80516101e0816117ee565b600082601f830112610cc657610cc6600080fd5b8135610c65848260208601610c02565b80356101e081611816565b60008060408385031215610cf757610cf7600080fd5b6000610d038585610c36565b9250506020610d1485828601610c36565b9150509250929050565b600080600080600060a08688031215610d3957610d39600080fd5b6000610d458888610c36565b9550506020610d5688828901610c36565b945050604086013567ffffffffffffffff811115610d7657610d76600080fd5b610d8288828901610c6d565b935050606086013567ffffffffffffffff811115610da257610da2600080fd5b610dae88828901610c6d565b925050608086013567ffffffffffffffff811115610dce57610dce600080fd5b610dda88828901610cb2565b9150509295509295909350565b600080600080600060a08688031215610e0257610e02600080fd5b6000610e0e8888610c36565b9550506020610e1f88828901610c36565b9450506040610e3088828901610cd6565b9350506060610dae88828901610cd6565b60008060408385031215610e5757610e57600080fd5b6000610e638585610c36565b9250506020610d1485828601610c91565b60008060408385031215610e8a57610e8a600080fd5b6000610e968585610c36565b9250506020610d1485828601610cd6565b60008060408385031215610ebd57610ebd600080fd5b823567ffffffffffffffff811115610ed757610ed7600080fd5b610ee385828601610c41565b925050602083013567ffffffffffffffff811115610f0357610f03600080fd5b610d1485828601610c6d565b600060208284031215610f2457610f24600080fd5b6000610c658484610c9c565b600060208284031215610f4557610f45600080fd5b6000610c658484610ca7565b600060208284031215610f6657610f66600080fd5b6000610c658484610cd6565b6000610f7e838361139f565b505060200190565b610f8f816115f4565b82525050565b6000610f9f825190565b80845260209384019383018060005b83811015610fd3578151610fc28882610f72565b975060208301925050600101610fae565b509495945050505050565b801515610f8f565b6000610ff0825190565b808452602084019350611007818560208601611611565b601f01601f19169290920192915050565b603481526000602082017f455243313135353a207472616e7366657220746f206e6f6e204552433131353581527f526563656976657220696d706c656d656e746572000000000000000000000000602082015291505b5060400190565b602881526000602082017f455243313135353a204552433131353552656365697665722072656a6563746581527f6420746f6b656e730000000000000000000000000000000000000000000000006020820152915061106e565b602b81526000602082017f455243313135353a2062616c616e636520717565727920666f7220746865207a81527f65726f20616464726573730000000000000000000000000000000000000000006020820152915061106e565b602981526000602082017f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7281527f20617070726f76656400000000000000000000000000000000000000000000006020820152915061106e565b602581526000602082017f455243313135353a207472616e7366657220746f20746865207a65726f20616481527f64726573730000000000000000000000000000000000000000000000000000006020820152915061106e565b603281526000602082017f455243313135353a207472616e736665722063616c6c6572206973206e6f742081527f6f776e6572206e6f7220617070726f76656400000000000000000000000000006020820152915061106e565b602a81526000602082017f455243313135353a20696e73756666696369656e742062616c616e636520666f81527f72207472616e73666572000000000000000000000000000000000000000000006020820152915061106e565b602981526000602082017f455243313135353a2073657474696e6720617070726f76616c2073746174757381527f20666f722073656c6600000000000000000000000000000000000000000000006020820152915061106e565b602981526000602082017f455243313135353a206163636f756e747320616e6420696473206c656e67746881527f206d69736d6174636800000000000000000000000000000000000000000000006020820152915061106e565b602881526000602082017f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682081527f6d69736d617463680000000000000000000000000000000000000000000000006020820152915061106e565b80610f8f565b60a081016113b38288610f86565b6113c06020830187610f86565b81810360408301526113d28186610f95565b905081810360608301526113e68185610f95565b905081810360808301526113fa8184610fe6565b979650505050505050565b60a081016114138288610f86565b6114206020830187610f86565b61142d604083018661139f565b61143a606083018561139f565b81810360808301526113fa8184610fe6565b6020808252810161145d8184610f95565b9392505050565b604080825281016114758185610f95565b90508181036020830152610c658184610f95565b602081016101e08284610fde565b6020808252810161145d8184610fe6565b602080825281016101e081611018565b602080825281016101e081611075565b602080825281016101e0816110cf565b602080825281016101e081611129565b602080825281016101e081611183565b602080825281016101e0816111dd565b602080825281016101e081611237565b602080825281016101e081611291565b602080825281016101e0816112eb565b602080825281016101e081611345565b602081016101e0828461139f565b60408101611564828561139f565b61145d602083018461139f565b600061157c60405190565b9050611588828261166e565b919050565b600067ffffffffffffffff8211156115a7576115a7611716565b5060209081020190565b600067ffffffffffffffff8211156115cb576115cb611716565b601f19601f83011660200192915050565b600082198211156115ef576115ef6116d4565b500190565b60006001600160a01b0382166101e0565b82818337506000910152565b60005b8381101561162c578181015183820152602001611614565b8381111561163b576000848401525b50505050565b60028104600182168061165557607f821691505b60208210811415611668576116686116ea565b50919050565b601f19601f830116810181811067ffffffffffffffff8211171561169457611694611716565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116cd576116cd6116d4565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156117455760046000803e5060005160e01c5b90565b600060443d10156117565790565b60405160043d036004823e80513d602482011167ffffffffffffffff8211171561177f57505090565b808201805167ffffffffffffffff81111561179b575050505090565b80602083010160043d0385018111156117b657505050505090565b6117c58260200185018661166e565b5090949350505050565b6117d8816115f4565b81146117e357600080fd5b50565b8015156117d8565b7fffffffff0000000000000000000000000000000000000000000000000000000081166117d8565b806117d856fea26469706673582212201758a6ba0fa3559eeb6d127e4e08e734bbe1da58c6aeddadf3ab88dc9189022b64736f6c63430008070033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  getDeployTransaction(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}

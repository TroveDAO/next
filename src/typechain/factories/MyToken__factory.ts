/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyToken, MyTokenInterface } from "../MyToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600781526626bcaa37b5b2b760c91b6020808301918252835180850190945260038452624d544b60e81b9084015281519192916200005c91600091620000eb565b50805162000072906001906020840190620000eb565b5050506200008f620000896200009560201b60201c565b62000099565b620001d8565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f99062000191565b90600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b600281046001821680620001a657607f821691505b60208210811415620001bc57620001bc620001c2565b50919050565b634e487b7160e01b600052602260045260246000fd5b611b3880620001e86000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b2578063a22cb46511610081578063c87b56dd11610066578063c87b56dd14610246578063e985e9c514610259578063f2fde38b1461029557600080fd5b8063a22cb46514610220578063b88d4fde1461023357600080fd5b806370a08231146101df578063715018a6146101ff5780638da5cb5b1461020757806395d89b411461021857600080fd5b806323b872dd116100ee57806323b872dd1461019357806340d097c3146101a657806342842e0e146101b95780636352211e146101cc57600080fd5b806301ffc9a71461012057806306fdde0314610149578063081812fc1461015e578063095ea7b31461017e575b600080fd5b61013361012e36600461115b565b6102a8565b60405161014091906117a3565b60405180910390f35b61015161038d565b60405161014091906117b1565b61017161016c36600461119d565b61041f565b6040516101409190611751565b61019161018c366004611128565b610478565b005b6101916101a1366004611026565b61051c565b6101916101b4366004610fc8565b61054d565b6101916101c7366004611026565b6105a0565b6101716101da36600461119d565b6105bb565b6101f26101ed366004610fc8565b6105f0565b60405161014091906118c2565b610191610634565b6006546001600160a01b0316610171565b61015161066a565b61019161022e3660046110f5565b610679565b610191610241366004611076565b610684565b61015161025436600461119d565b6106bc565b610133610267366004610fe9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101916102a3366004610fc8565b61075c565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061033b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061038757507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461039c906119a3565b80601f01602080910402602001604051908101604052809291908181526020018280546103c8906119a3565b80156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661045c5760405162461bcd60e51b815260040161045390611862565b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610483826105bb565b9050806001600160a01b0316836001600160a01b031614156104b75760405162461bcd60e51b8152600401610453906118a2565b336001600160a01b03821614806104f157506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61050d5760405162461bcd60e51b815260040161045390611822565b61051783836107b8565b505050565b6105263382610833565b6105425760405162461bcd60e51b8152600401610453906118b2565b6105178383836108e5565b6006546001600160a01b031633146105775760405162461bcd60e51b815260040161045390611872565b600061058260075490565b9050610592600780546001019055565b61059c8282610a14565b5050565b61051783838360405180602001604052806000815250610684565b6000818152600260205260408120546001600160a01b0316806103875760405162461bcd60e51b815260040161045390611842565b60006001600160a01b0382166106185760405162461bcd60e51b815260040161045390611832565b506001600160a01b031660009081526003602052604090205490565b6006546001600160a01b0316331461065e5760405162461bcd60e51b815260040161045390611872565b6106686000610a2e565b565b60606001805461039c906119a3565b61059c338383610a8d565b61068e3383610833565b6106aa5760405162461bcd60e51b8152600401610453906118b2565b6106b684848484610b4e565b50505050565b6000818152600260205260409020546060906001600160a01b03166106f35760405162461bcd60e51b815260040161045390611892565b600061070a60408051602081019091526000815290565b9050600081511161072a5760405180602001604052806000815250610755565b8061073484610b81565b604051602001610745929190611739565b6040516020818303038152906040525b9392505050565b6006546001600160a01b031633146107865760405162461bcd60e51b815260040161045390611872565b6001600160a01b0381166107ac5760405162461bcd60e51b8152600401610453906117d2565b6107b581610a2e565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906107fa826105bb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166108675760405162461bcd60e51b815260040161045390611812565b6000610872836105bb565b9050806001600160a01b0316846001600160a01b031614806108ad5750836001600160a01b03166108a28461041f565b6001600160a01b0316145b806108dd57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108f8826105bb565b6001600160a01b03161461091e5760405162461bcd60e51b815260040161045390611882565b6001600160a01b0382166109445760405162461bcd60e51b8152600401610453906117f2565b61094f6000826107b8565b6001600160a01b0383166000908152600360205260408120805460019290610978908490611943565b90915550506001600160a01b03821660009081526003602052604081208054600192906109a6908490611917565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61059c828260405180602001604052806000815250610cb3565b600680546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610abf5760405162461bcd60e51b815260040161045390611802565b6001600160a01b038381166000818152600560209081526040808320948716808452949091529081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610b419085906117a3565b60405180910390a3505050565b610b598484846108e5565b610b6584848484610ce6565b6106b65760405162461bcd60e51b8152600401610453906117c2565b606081610bc157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610beb5780610bd5816119fd565b9150610be49050600a8361192f565b9150610bc5565b60008167ffffffffffffffff811115610c0657610c06611aa2565b6040519080825280601f01601f191660200182016040528015610c30576020820181803683370190505b5090505b84156108dd57610c45600183611943565b9150610c52600a86611a36565b610c5d906030611917565b60f81b818381518110610c7257610c72611a8c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610cac600a8661192f565b9450610c34565b610cbd8383610e3d565b610cca6000848484610ce6565b6105175760405162461bcd60e51b8152600401610453906117c2565b60006001600160a01b0384163b15610e32576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a0290610d4390339089908890889060040161175f565b602060405180830381600087803b158015610d5d57600080fd5b505af1925050508015610d8d575060408051601f3d908101601f19168201909252610d8a9181019061117c565b60015b610de7573d808015610dbb576040519150601f19603f3d011682016040523d82523d6000602084013e610dc0565b606091505b508051610ddf5760405162461bcd60e51b8152600401610453906117c2565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001490506108dd565b506001949350505050565b6001600160a01b038216610e635760405162461bcd60e51b815260040161045390611852565b6000818152600260205260409020546001600160a01b031615610e985760405162461bcd60e51b8152600401610453906117e2565b6001600160a01b0382166000908152600360205260408120805460019290610ec1908490611917565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610f3f610f3a846118ec565b6118d0565b905082815260208101848484011115610f5a57610f5a600080fd5b610f6584828561196b565b509392505050565b803561038781611ab8565b803561038781611acc565b803561038781611ad4565b805161038781611ad4565b600082601f830112610fad57610fad600080fd5b81356108dd848260208601610f2c565b803561038781611afc565b600060208284031215610fdd57610fdd600080fd5b60006108dd8484610f6d565b60008060408385031215610fff57610fff600080fd5b600061100b8585610f6d565b925050602061101c85828601610f6d565b9150509250929050565b60008060006060848603121561103e5761103e600080fd5b600061104a8686610f6d565b935050602061105b86828701610f6d565b925050604061106c86828701610fbd565b9150509250925092565b6000806000806080858703121561108f5761108f600080fd5b600061109b8787610f6d565b94505060206110ac87828801610f6d565b93505060406110bd87828801610fbd565b925050606085013567ffffffffffffffff8111156110dd576110dd600080fd5b6110e987828801610f99565b91505092959194509250565b6000806040838503121561110b5761110b600080fd5b60006111178585610f6d565b925050602061101c85828601610f78565b6000806040838503121561113e5761113e600080fd5b600061114a8585610f6d565b925050602061101c85828601610fbd565b60006020828403121561117057611170600080fd5b60006108dd8484610f83565b60006020828403121561119157611191600080fd5b60006108dd8484610f8e565b6000602082840312156111b2576111b2600080fd5b60006108dd8484610fbd565b6111c78161195a565b82525050565b8015156111c7565b60006111df825190565b8084526020840193506111f6818560208601611977565b601f01601f19169290920192915050565b6000611211825190565b61121f818560208601611977565b9290920192915050565b603281526000602082017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015291505b5060400190565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181527f64647265737300000000000000000000000000000000000000000000000000006020820152915061127f565b601c81526000602082017f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000815291505b5060200190565b602481526000602082017f4552433732313a207472616e7366657220746f20746865207a65726f2061646481527f72657373000000000000000000000000000000000000000000000000000000006020820152915061127f565b601981526000602082017f4552433732313a20617070726f766520746f2063616c6c65720000000000000081529150611310565b602c81526000602082017f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657881527f697374656e7420746f6b656e00000000000000000000000000000000000000006020820152915061127f565b603881526000602082017f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7781527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020820152915061127f565b602a81526000602082017f4552433732313a2062616c616e636520717565727920666f7220746865207a6581527f726f2061646472657373000000000000000000000000000000000000000000006020820152915061127f565b602981526000602082017f4552433732313a206f776e657220717565727920666f72206e6f6e657869737481527f656e7420746f6b656e00000000000000000000000000000000000000000000006020820152915061127f565b60208082527f4552433732313a206d696e7420746f20746865207a65726f206164647265737391019081526000611310565b602c81526000602082017f4552433732313a20617070726f76656420717565727920666f72206e6f6e657881527f697374656e7420746f6b656e00000000000000000000000000000000000000006020820152915061127f565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611310565b602981526000602082017f4552433732313a207472616e73666572206f6620746f6b656e2074686174206981527f73206e6f74206f776e00000000000000000000000000000000000000000000006020820152915061127f565b602f81526000602082017f4552433732314d657461646174613a2055524920717565727920666f72206e6f81527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006020820152915061127f565b602181526000602082017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6581527f72000000000000000000000000000000000000000000000000000000000000006020820152915061127f565b603181526000602082017f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f81527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020820152915061127f565b806111c7565b60006117458285611207565b91506108dd8284611207565b6020810161038782846111be565b6080810161176d82876111be565b61177a60208301866111be565b6117876040830185611733565b818103606083015261179981846111d5565b9695505050505050565b6020810161038782846111cd565b6020808252810161075581846111d5565b6020808252810161038781611229565b6020808252810161038781611286565b60208082528101610387816112e0565b6020808252810161038781611317565b6020808252810161038781611371565b60208082528101610387816113a5565b60208082528101610387816113ff565b6020808252810161038781611459565b60208082528101610387816114b3565b602080825281016103878161150d565b602080825281016103878161153f565b6020808252810161038781611599565b60208082528101610387816115cb565b6020808252810161038781611625565b602080825281016103878161167f565b60208082528101610387816116d9565b602081016103878284611733565b60006118db60405190565b90506118e782826119d0565b919050565b600067ffffffffffffffff82111561190657611906611aa2565b601f19601f83011660200192915050565b6000821982111561192a5761192a611a4a565b500190565b60008261193e5761193e611a60565b500490565b60008282101561195557611955611a4a565b500390565b60006001600160a01b038216610387565b82818337506000910152565b60005b8381101561199257818101518382015260200161197a565b838111156106b65750506000910152565b6002810460018216806119b757607f821691505b602082108114156119ca576119ca611a76565b50919050565b601f19601f830116810181811067ffffffffffffffff821117156119f6576119f6611aa2565b6040525050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a2f57611a2f611a4a565b5060010190565b600082611a4557611a45611a60565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611ac18161195a565b81146107b557600080fd5b801515611ac1565b7fffffffff000000000000000000000000000000000000000000000000000000008116611ac1565b80611ac156fea2646970667358221220752a76fb912d10cb530ea19eaa6e9cd7d6ce54080c8b8669d64dd0831cd59ff464736f6c63430008070033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyToken> {
    return super.deploy(overrides || {}) as Promise<MyToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyToken {
    return super.attach(address) as MyToken;
  }
  connect(signer: Signer): MyToken__factory {
    return super.connect(signer) as MyToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new utils.Interface(_abi) as MyTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyToken {
    return new Contract(address, _abi, signerOrProvider) as MyToken;
  }
}

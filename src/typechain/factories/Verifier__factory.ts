/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_importantAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newVaultAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newRegistryAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lat",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lng",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_random",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "lazyMintURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "fromVaultId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fromVaultQuantity",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "treasureType",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "layerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "entityId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "entityContract",
        type: "address",
      },
    ],
    name: "isValidData",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVaultAddress",
        type: "address",
      },
    ],
    name: "setVaultAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600354600680546001600160a01b0319166001600160a01b039092169190911790553480156200003357600080fd5b506040516200126438038062001264833981016040819052620000569162000107565b6200006133620000a4565b600180546001600160a01b039485166001600160a01b0319918216179091556002805493851693821693909317909255600380549190931691161790556200018b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051620001018162000171565b92915050565b600080600060608486031215620001215762000121600080fd5b60006200012f8686620000f4565b93505060206200014286828701620000f4565b92505060406200015586828701620000f4565b9150509250925092565b60006001600160a01b03821662000101565b6200017c816200015f565b81146200018857600080fd5b50565b6110c9806200019b6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806385535cc511610076578063bc197c811161005b578063bc197c8114610147578063f23a6e611461015a578063f2fde38b1461019257600080fd5b806385535cc51461011b5780638da5cb5b1461012e57600080fd5b806301ffc9a7146100a8578063150b7a02146100d157806325f77861146100f1578063715018a614610111575b600080fd5b6100bb6100b6366004610b2e565b6101a5565b6040516100c89190610e5d565b60405180910390f35b6100e46100df366004610a55565b61023e565b6040516100c89190610ea0565b6101046100ff366004610b70565b610268565b6040516100c89190610f2f565b61011961063d565b005b61011961012936600461096b565b610673565b6000546001600160a01b03166040516100c89190610e07565b6100e461015536600461098c565b6106cc565b6100e4610168366004610ad4565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b6101196101a036600461096b565b6106f7565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061023857507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7f150b7a02000000000000000000000000000000000000000000000000000000005b949350505050565b6000808c8c8c60405160200161028093929190610dd0565b604051602081830303815290604052805190602001209050600060048b6040516102aa9190610dbd565b9081526040519081900360200190205460ff16156102e35760405162461bcd60e51b81526004016102da90610f1f565b60405180910390fd5b6001546001600160a01b03166102f9838d610753565b6001600160a01b031614156105f957600160048c60405161031a9190610dbd565b9081526040805160209281900383018120805460ff1916941515949094179093556005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0389161790558281019052600882527f6d696e7461626c65000000000000000000000000000000000000000000000000918101919091528751908801207fc6a432477966ec23f9f97fdc509215117a7e4ddd1da67fb82adf2e702fd8c8221415610463576005546040517f691c65d40000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063691c65d49061040a903390600401610e07565b602060405180830381600087803b15801561042457600080fd5b505af1158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610b4f565b90506105f9565b60408051808201909152600881527f6c617a794d696e740000000000000000000000000000000000000000000000006020918201528751908801207fd1a55dc4006a534f71076171ee3c015bb6adfb5998aefafb9b403a7992aa93691415610510576005546040517fd204c45e0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063d204c45e9061040a9033908e90600401610e3d565b60408051808201909152600981527f66726f6d5661756c7400000000000000000000000000000000000000000000006020918201528751908801207fa9e76ebb72cffbb37bb22b609f21525959a2ed095b4c0f8af52bc3d98f0b842014156105f9576005546002546040517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316926342842e0e926105c39291169033908e90600401610e15565b600060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050508890505b600160048c60405161060b9190610dbd565b908152604051908190036020019020805491151560ff199092169190911790559150509b9a5050505050505050505050565b6000546001600160a01b031633146106675760405162461bcd60e51b81526004016102da90610f0f565b61067160006107c4565b565b6000546001600160a01b0316331461069d5760405162461bcd60e51b81526004016102da90610f0f565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b7fbc197c81000000000000000000000000000000000000000000000000000000005b95945050505050565b6000546001600160a01b031633146107215760405162461bcd60e51b81526004016102da90610f0f565b6001600160a01b0381166107475760405162461bcd60e51b81526004016102da90610eae565b610750816107c4565b50565b60008060008061076285610821565b604080516000815260200190819052929550909350915060019061078d908890869086908690610e6b565b6020604051602081039080840390855afa1580156107af573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000835160411461083457600080fd5b5050506020810151604082015160609092015160001a92909190565b600061086361085e84610f59565b610f3d565b9050808382526020820190508285602086028201111561088557610885600080fd5b60005b858110156108b1578161089b8882610955565b8452506020928301929190910190600101610888565b5050509392505050565b60006108c961085e84610f7d565b9050828152602081018484840111156108e4576108e4600080fd5b6108ef848285610fb9565b509392505050565b803561023881611051565b600082601f83011261091657610916600080fd5b8135610260848260208601610850565b803561023881611065565b600082601f83011261094557610945600080fd5b81356102608482602086016108bb565b80356102388161108d565b80516102388161108d565b60006020828403121561098057610980600080fd5b600061026084846108f7565b600080600080600060a086880312156109a7576109a7600080fd5b60006109b388886108f7565b95505060206109c4888289016108f7565b945050604086013567ffffffffffffffff8111156109e4576109e4600080fd5b6109f088828901610902565b935050606086013567ffffffffffffffff811115610a1057610a10600080fd5b610a1c88828901610902565b925050608086013567ffffffffffffffff811115610a3c57610a3c600080fd5b610a4888828901610931565b9150509295509295909350565b60008060008060808587031215610a6e57610a6e600080fd5b6000610a7a87876108f7565b9450506020610a8b878288016108f7565b9350506040610a9c87828801610955565b925050606085013567ffffffffffffffff811115610abc57610abc600080fd5b610ac887828801610931565b91505092959194509250565b600080600080600060a08688031215610aef57610aef600080fd5b6000610afb88886108f7565b9550506020610b0c888289016108f7565b9450506040610b1d88828901610955565b9350506060610a1c88828901610955565b600060208284031215610b4357610b43600080fd5b60006102608484610926565b600060208284031215610b6457610b64600080fd5b60006102608484610960565b60008060008060008060008060008060006101608c8e031215610b9557610b95600080fd5b6000610ba18e8e610955565b9b50506020610bb28e828f01610955565b9a50506040610bc38e828f01610955565b99505060608c013567ffffffffffffffff811115610be357610be3600080fd5b610bef8e828f01610931565b98505060808c013567ffffffffffffffff811115610c0f57610c0f600080fd5b610c1b8e828f01610931565b97505060a0610c2c8e828f01610955565b96505060c0610c3d8e828f01610955565b95505060e08c013567ffffffffffffffff811115610c5d57610c5d600080fd5b610c698e828f01610931565b945050610100610c7b8e828f01610955565b935050610120610c8d8e828f01610955565b925050610140610c9f8e828f016108f7565b9150509295989b509295989b9093969950565b610cbb81610fa8565b82525050565b801515610cbb565b80610cbb565b7fffffffff000000000000000000000000000000000000000000000000000000008116610cbb565b6000610d01825190565b610d0f818560208601610fc5565b9290920192915050565b6000610d23825190565b808452602084019350610d3a818560208601610fc5565b601f01601f19169290920192915050565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b600881526000602082017f4e6f74207265616c00000000000000000000000000000000000000000000000081529150610d79565b60ff8116610cbb565b6000610dc98284610cf7565b9392505050565b6000610ddc8286610cc9565b602082019150610dec8285610cc9565b602082019150610dfc8284610cc9565b506020019392505050565b602081016102388284610cb2565b60608101610e238286610cb2565b610e306020830185610cb2565b6102606040830184610cc9565b60408101610e4b8285610cb2565b81810360208301526102608184610d19565b602081016102388284610cc1565b60808101610e798287610cc9565b610e866020830186610db4565b610e936040830185610cc9565b6106ee6060830184610cc9565b602081016102388284610ccf565b6020808252810161023881602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201527f6464726573730000000000000000000000000000000000000000000000000000604082015260600190565b6020808252810161023881610d4b565b6020808252810161023881610d80565b602081016102388284610cc9565b6000610f4860405190565b9050610f548282610ff5565b919050565b600067ffffffffffffffff821115610f7357610f73611022565b5060209081020190565b600067ffffffffffffffff821115610f9757610f97611022565b601f19601f83011660200192915050565b60006001600160a01b038216610238565b82818337506000910152565b60005b83811015610fe0578181015183820152602001610fc8565b83811115610fef576000848401525b50505050565b601f19601f830116810181811067ffffffffffffffff8211171561101b5761101b611022565b6040525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61105a81610fa8565b811461075057600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811661105a565b8061105a56fea264697066735822122034879599bf86c92b4716596671b1a79644ed80d280ecc5dac3892027b714dd5b64736f6c63430008070033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _importantAddress: string,
    _newVaultAddress: string,
    _newRegistryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Verifier> {
    return super.deploy(
      _importantAddress,
      _newVaultAddress,
      _newRegistryAddress,
      overrides || {}
    ) as Promise<Verifier>;
  }
  getDeployTransaction(
    _importantAddress: string,
    _newVaultAddress: string,
    _newRegistryAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _importantAddress,
      _newVaultAddress,
      _newRegistryAddress,
      overrides || {}
    );
  }
  attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
